name: CI
on:
  push:
    paths: [ 'cmake/projects/**' ]
  pull_request:
    paths: [ 'cmake/projects/**' ]
  workflow_dispatch:
    inputs:
      project:
        description: 'Project name'
        required: true

jobs:

  set_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:

    - name: Git checkout
      uses: actions/checkout@v2

    - name: Manual dispatch, get project name from input
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo '["cmake/projects/${{ github.event.inputs.project }}/hunter.cmake"]' > ${HOME}/files.json

    - name: Get changed files and save them to ${HOME}/files.json
      if: ${{ github.event_name != 'workflow_dispatch' }}
      id: files
      uses: lots0logs/gh-action-get-changed-files@2.1.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set matrix for subsequent build
      id: set-matrix
      run: |
        MATRIX=`python .github/workflows/set_matrix.py`
        if [ "${MATRIX}" ]; then
          echo "::set-output name=matrix::${MATRIX}"
        else
          exit 1
        fi

  build:
    needs: set_matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.set_matrix.outputs.matrix) }}

    env:
      TOOLCHAIN: ${{ matrix.toolchain }}
      PROJECT_DIR: examples/${{ matrix.example }}

    steps:

    - name: Git checkout with submodules
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Build on Unix
      if: "!startsWith(matrix.os, 'windows')"
      run: |
        bash ${{ matrix.script }}

    - name: Build on Windows
      if: "startsWith(matrix.os, 'windows')"
      run: |
        ${{ matrix.script }}

    - name: Save log artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.example }}.${{ matrix.toolchain }}.${{ job.status }}.log
        path: _testing/_logs/polly/${{ matrix.toolchain }}/log.txt